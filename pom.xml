<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>io.github.muyu-ml</groupId>
    <artifactId>lclrpc</artifactId>
    <version>${lclrpc.version}</version>
    <name>lcl-rpc</name>
    <description>lcl-rpc</description>
    <packaging>pom</packaging>

<!--    deploy 检查校验相关 begin-->
    <url>https://github.com/muyu-ml/lcl-rpc</url>

    <!--    开源 license 协议-->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!--    项目的问题管理系统-->
    <issueManagement>
        <system>github</system>
        <url>https://github.com/muyu-ml/lcl-rpc/issues</url>
    </issueManagement>

    <!--    源代码管理工具-->
    <scm>
        <connection>scm:git:https://github.com/muyu-ml/lcl-rpc.git</connection>
        <developerConnection>scm:git:https://github.com/muyu-ml/lcl-rpc.git</developerConnection>
        <url>https://github.com/muyu-ml/lcl-rpc</url>
    </scm>

    <!--    开发者信息-->
    <developers>
        <developer>
            <name>lcl</name>
            <email>liconglong@163.com</email>
            <url>https://www.cnblogs.com/liconglong</url>
        </developer>
    </developers>
<!--    deploy 检查校验相关 end-->

    <properties>
<!--        <lclrpc.version>0.0.1-SNAPSHOT</lclrpc.version>-->
        <lclrpc.version>0.0.1</lclrpc.version>
        <spring.boot.version>3.2.3</spring.boot.version>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <modules>
        <module>lclrpc-core</module>
        <module>lclrpc-demo-api</module>
        <module>lclrpc-demo-provider</module>
        <module>lclrpc-demo-consumer</module>
    </modules>

    <build>
        <plugins>
            <!--            flatten-maven-plugin 插件：用于管理统一版本变量-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.5.0</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <flattenMode>oss</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--            maven-source-plugin 插件：用于生成源码包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludeResources>true</excludeResources>
                    <useDefaultExcludes>true</useDefaultExcludes>
                </configuration>
            </plugin>

            <!--            maven-javadoc-plugin 插件：用于生成 javadoc 文档-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.1.0</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>bundle-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <maxmemory>1024</maxmemory>
                    <encoding>UTF-8</encoding>
                    <show>protected</show>
                    <notree>true</notree>

                    <!-- Avoid running into Java 8's very restrictive doclint issues -->
                    <failOnError>false</failOnError>
                    <doclint>none</doclint>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <!-- 使用 maven-gpg-plugin 插件对项目进行签名 -->
<!--                    1、使用 gpg &#45;&#45;gen-key 命令生成密钥对（需要在本机安装gpg才能使用该命令（注意：此处命令注释有转义符）-->
<!--                    2、使用 gpg &#45;&#45;keyserver hkp://keyserver.ubuntu.com:11371 &#45;&#45;send-keys your_public（你的公钥） 将秘钥上传到证书服务器（哪个证书服务器都可以）（注意：此处命令注释有转义符）-->
<!--                    3、在 maven settings.xml 中配置 gpg 插件的私钥和公钥-->
<!--                    4、在 ~/.bash_profile 中添加 export GPG_TTY=$(tty) ，设置 gpg 运行的终端为当前终端-->
<!--                    5、在 maven settings.xml 中配置中央仓库用户名密码（在中央仓库 view your account  ->>>  Generate User Token）-->
<!--                    6、使用  mvn clean package -DskipTests install deploy -P release 命令打包并上传中央仓库-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!--            maven 中央仓库发布插件-->
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                        <version>0.4.0</version>
                        <extensions>true</extensions>
                        <configuration>
                            <publishingServerId>central</publishingServerId>
                            <tokenAuth>true</tokenAuth>
                            <autoPublish>true</autoPublish>
                            <excludeArtifacts>
                                <excludeArtifact>lclrpc-demo-api</excludeArtifact>
                                <excludeArtifact>lclrpc-demo-provider</excludeArtifact>
                                <excludeArtifact>lclrpc-demo-consumer</excludeArtifact>
                            </excludeArtifacts>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
